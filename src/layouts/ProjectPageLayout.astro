---
// Page layout for the .md files containing content to readmore about a 'project'.

/*
    NOTE: Avoiding nested layouts as the astro build is currently having a üêõ bug, 
    
    üêõ : Duplicate css and js <link> are being inserted in sub-layout in production #5715 
*/
// import Layout from "./Layout.astro";

// Components
import BackInHistory from "../components/BackInHistory.astro";
import Header from "../components/Header.astro";
import Footer from "../components/Footer.astro";

// styles
import "../styles/simple.css";
import "../styles/custom.css";

// Types
import type { ProjectDetailsFrontmatter } from "../types/ProjectDetailsFrontmatter";
interface Props {
    frontmatter: ProjectDetailsFrontmatter;
}

// props
const { frontmatter } = Astro.props;

// NOTE: this variable is used by commented out code below
// const tags = frontmatter.tags.split(" ");
---

{
    /*
        <Layout
            categoryTabTitle="project"
            pageTabTitle={frontmatter.title}
            pageTitle={frontmatter.title}
            showNav={false}
        >
            <main>main content goes here</main>
        </Layout>
*/
}
<html lang="en">
    <head>
        <meta charset="UTF-8" />
        <meta name="viewport" content="width=device-width" />
        <meta name="generator" content={Astro.generator} />
        <title>{`${frontmatter.title} ‚Ä¢ "project"`}</title>
    </head>
    <body>
        <Header title={frontmatter.title} showNav={false} />
        <main>
            <div class="links-container project-page">
                <BackInHistory />
                <span>
                    <a
                        href={`https://github.com/av1-lv5/${frontmatter.repoId}/`}
                        target="_blank"
                    >
                        Code
                    </a>
                    <a href={`https://${frontmatter.liveAt}/`} target="_blank">
                        Live</a
                    >
                </span>
            </div>

            {
                /*
                // a container that shows all the tags present on that project.
                <div class="stack-tags-container">
                    {
                        tags.map((tag) => {
                            return <span class="stack-tag">{tag}</span>;
                        })
                    }
                    </div> 
                */
            }
            <slot />
        </main>
        <Footer />
    </body>
</html>
